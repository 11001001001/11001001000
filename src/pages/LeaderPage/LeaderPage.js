import React, { useEffect, useState } from 'react';
import './LeaderPage.css';

const LeaderPage = () => {
  const [users, setUsers] = useState([]);
  const [currentUser, setCurrentUser] = useState(null);
  const [currentRank, setCurrentRank] = useState(null);
  const [totalUsers, setTotalUsers] = useState(null); 
  const [balance, setBalance] = useState(0);
  const [isBalanceLoaded, setIsBalanceLoaded] = useState(false); // –§–ª–∞–≥ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞
  const [isLoading, setIsLoading] = useState(true); // –°–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏
  const [isChecked, setIsChecked] = useState(true); // –§–ª–∞–≥ –¥–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫

  const picture = 'https://freesvg.org/img/abstract-user-flat-4.png'; // URL –∞–≤–∞—Ç–∞—Ä–∞ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é

  // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ü–≤–µ—Ç–∞ —Ñ–æ–Ω–∞ –∏ —à–∞–ø–∫–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è Telegram
  window.Telegram.WebApp.setBackgroundColor('#000');
  window.Telegram.WebApp.setHeaderColor('#000');

  // –ü–æ–ª—É—á–∞–µ–º ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥–∞–Ω–Ω—ã—Ö Telegram
  const userId = window.Telegram.WebApp.initDataUnsafe.user.id; 

  // –ó–∞–ø—Ä–æ—Å –Ω–∞—á–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö (–±–∞–ª–∞–Ω—Å) –∏–∑ Cloud Storage Telegram
  useEffect(() => {
    const getInitialData = () => {
      window.Telegram.WebApp.CloudStorage.getItems(['balanceC'], (error, result) => {
        if (error) {
          console.error('Failed to get initial data from cloud storage:', error);
        } else {
          const initialBalance = result.balanceC ? parseInt(result.balanceC, 10) : 0;
          setBalance(initialBalance);
          setIsBalanceLoaded(true); 
        }
      });
    };
    getInitialData();
  }, []);

  const checkAndUpdateBalance = async () => {
    if (!isBalanceLoaded) return; // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞

    try {
      // –ü–æ–ª—É—á–∞–µ–º –±–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å API
      const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/ch${process.env.AHHHF_IOE_PESDX}eck-user/${userId}/`);
      const data = await response.json();

      if (data.message === "User found") {
        const apiBalance = parseInt(data.balance, 10);

        // –ï—Å–ª–∏ –±–∞–ª–∞–Ω—Å –≤ API –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è –æ—Ç –ª–æ–∫–∞–ª—å–Ω–æ–≥–æ, –æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ
        if (apiBalance < balance) {
          try {
            const updateResponse = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/update-bala${process.env.AHHHF_IOE_PESDX}nce/${userId}/`, {
              method: 'PUT',
              headers: { 'Content-Type': 'application/json' },
              body: JSON.stringify({ balance })
            });

            if (updateResponse.ok) {
              console.log('Balance updated successfully');
            } else {
              console.error('Error updating balance:', await updateResponse.json());
            }
          } catch (error) {
            console.error('Request failed:', error);
          }
        }
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –±–∞–ª–∞–Ω—Å–∞:', error);
    }
  };

  const getCurrentMonth = () => {
    const monthNames = [
        "January", "February", "March", "April", "May", "June",
        "July", "August", "September", "October", "November", "December"
    ];
    const date = new Date();
    return monthNames[date.getMonth()];
};


  // –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ API
  useEffect(() => {
    const fetchUsers = async () => {
      if (!isBalanceLoaded) return; // –ñ–¥–µ–º –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞ –ø–µ—Ä–µ–¥ –∑–∞–ø—Ä–æ—Å–æ–º

      try {
        // –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–≤–µ—Ä—è–µ–º –∏ –æ–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å
        await checkAndUpdateBalance();

        // –ó–∞–ø—Ä–æ—Å —Å–ø–∏—Å–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        const response = await fetch(`${process.env.REACT_APP_API_BASE_URL}/api/li${process.env.AHHHF_IOE_PESDX}st-user/`);
        const data = await response.json();
        setUsers(data);
        setIsChecked(false);
      } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö:', error);
      }
    };

    fetchUsers();
  }, [isBalanceLoaded, balance]); // –ó–∞–≤–∏—Å–∏–º–æ—Å—Ç—å –æ—Ç –∑–∞–≥—Ä—É–∑–∫–∏ –±–∞–ª–∞–Ω—Å–∞

  // –ó–∞–ø—Ä–æ—Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ –∏ –µ–≥–æ —Ä–∞–Ω–≥–µ
  useEffect(() => {
    fetch(`${process.env.REACT_APP_API_BASE_URL}/api/user-r${process.env.AHHHF_IOE_PESDX}ank/?user_id=${userId}`)
      .then(response => response.json())
      .then(data => {
        setCurrentUser(data.user);
        setCurrentRank(data.rank);
        setTotalUsers(data.total_users); // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        setIsLoading(false);
      })
      .catch(error => console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–∫—É—â–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ:', error));
  }, [userId]);

  return (
    <>
      {isLoading && isChecked ? (
        <div className='spinner-container'>
          <div className="spinner">
            <img src="https://i.ibb.co/GnPQ1jd/IMG-2102.png" alt="loading" className="spinner-image" />
          </div>
        </div>
      ) : (
        <div className="leader-scroll">
          {/* –°–µ–∫—Ü–∏—è —à–∞–ø–∫–∏ –ª–∏–¥–µ—Ä–æ–≤ */}
          <div className='top-leader'>
            <div className="leader-header">
              <img
                src="https://getcompliance.com.au/wp-content/uploads/2022/11/star.png"
                alt="Leader Avatar"
              />
              <div className='header-up'>Leaderboard</div>
              <div className='header-low'>{`üèÜ Top 100 üèÜ`}</div> {/* –ó–¥–µ—Å—å –≤—ã–≤–æ–¥–∏–º —Ç–µ–∫—É—â–∏–π –º–µ—Å—è—Ü */}
            </div>

            {/* –ö–∞—Ä—Ç–æ—á–∫–∞ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
            {currentUser && (
              <div className="leader-card">
                <img
                  src={currentUser.photo_url || picture} // –ê–≤–∞—Ç–∞—Ä —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  alt={currentUser.name}
                  onError={(e) => e.target.src = picture} // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
                />
                <div>
                  <strong>{currentUser.name}</strong> {/* –ò–º—è —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <p>{`#${currentRank.toLocaleString()}`}</p> {/* –†–∞–Ω–≥ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                </div>
                <div className="coins">
                  <p>{parseInt(balance).toLocaleString()}</p> {/* –ë–∞–ª–∞–Ω—Å —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <img
                    src="https://i.ibb.co/GnPQ1jd/IMG-2102.png"
                    alt="coins"
                  />
                </div>
              </div>
            )}
          </div>

          {/* –°–µ–∫—Ü–∏—è —Å–ø–∏—Å–∫–∞ –ª–∏–¥–µ—Ä–æ–≤ */}
          <div className='mid-leader'>
            {users.map((user, index) => (
              <div key={user.user_id} className="leader-card">
                <img
                  src={user.photo_url || picture} // –ê–≤–∞—Ç–∞—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                  alt={user.name}
                  onError={(e) => e.target.src = picture} // –ó–∞–º–µ–Ω—è–µ–º –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –ø—Ä–∏ –æ—à–∏–±–∫–µ
                />
                <div>
                  <strong>{user.name}</strong> {/* –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <p>{`#${index + 1}`}</p> {/* –ü–æ—Ä—è–¥–∫–æ–≤—ã–π –Ω–æ–º–µ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                </div>
                <div className="coins">
                  <p>{parseInt(user.balance).toLocaleString()}</p> {/* –ë–∞–ª–∞–Ω—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è */}
                  <img
                    src="https://i.ibb.co/GnPQ1jd/IMG-2102.png"
                    alt="coins"
                    style={{ width: '30px' }} // –†–∞–∑–º–µ—Ä –∫–∞—Ä—Ç–∏–Ω–∫–∏ –º–æ–Ω–µ—Ç—ã
                  />
                </div>
              </div>
            ))}
          </div>
        </div>
      )}
    </>
  );
};

export default LeaderPage;
